#!/usr/bin/env node

/**
 * Module dependencies.
 */

var exec = require('child_process').exec
var debug = require('debug')('watch')
var program = require('commander')
var join = require('path').join
var Gaze = require('gaze').Gaze

/**
 * Options.
 */

program
  .usage('<cmd>')
  .option('-p, --pattern <pattern>', 'glob pattern. More info: https://github.com/isaacs/minimatch', 'lib/**')

/**
 * Examples.
 */

program.on('--help', function(){
  console.log()
  console.log('  Examples:')
  console.log()
  console.log('    # watch dir and execute cmd')
  console.log('    $ watch-run -p \'lib/**\' cat package.json')
  console.log()
})

/**
 * Parse argv.
 */

program.parse(process.argv)

/**
 * Get command.
 */

var command = program.args.join(' ')

/**
 * Watch.
 */

var watch = new Gaze(program.pattern.split(','))
watch.on('all', execute)

/**
 * Execute command when file in dir changes.
 *
 * @param {String} event
 * @param {String} path
 */

function execute (event, path) {
  console.log("file changed: " + path)
  exec(command.replace(/FILE/g, path), function(err, stdout, stderr) {
    if(err) {
      console.error(err.message)
      console.error(err.stack)
    }
    if(stdout) console.log(stdout);
    if(stderr) console.error(stderr);
  })
}